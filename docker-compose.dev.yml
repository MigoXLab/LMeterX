version: '3.8'
services:
  # MySQL
  mysql:
    image: mysql:5.7
    container_name: lmeterx-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: lmeterx123
      MYSQL_DATABASE: lmeterx
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --init-connect='SET NAMES utf8mb4'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-plmeterx123"]
      timeout: 20s
      retries: 10

  # backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lmeterx-backend
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DATABASE_URL=mysql://root:lmeterx123@mysql:3306/lmeterx
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=lmeterx123
      - DB_NAME=lmeterx
      - SECRET_KEY=your_secret_key_here
      - FLASK_DEBUG=false
    volumes:
      - ./logs:/logs
      - upload_files:/app/upload_files
    ports:
      - "5001:5001"
    healthcheck:
      test: [ "CMD", "curl", "-s", "-f", "http://localhost:5001/health" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  # engine service
  engine:
    build:
      context: ./st_engine
      dockerfile: Dockerfile
    container_name: lmeterx-engine
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=lmeterx123
      - DB_NAME=lmeterx
      - SECRET_KEY=your_secret_key_here
      - FLASK_DEBUG=false
    volumes:
      - ./logs:/logs
      - upload_files:/app/upload_files
    ports:
      - "5002:5002"
    healthcheck:
      test: [ "CMD", "curl", "-s", "-f", "http://localhost:5002/health" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  # frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lmeterx-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "8080:80"
    environment:
      - VITE_API_BASE_URL=/api
    healthcheck:
      test: [ "CMD", "curl", "-s", "-f", "http://localhost:80" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/nginx-map.conf:/etc/nginx/conf.d/map.conf
      - upload_files:/usr/share/nginx/html/uploads
volumes:
  mysql_data:
  upload_files:

networks:
  default:
    name: lmeterx-network
