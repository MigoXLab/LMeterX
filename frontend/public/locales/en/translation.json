{
  "sidebar": {
    "testTasks": "Test Tasks",
    "modelArena": "Model Arena",
    "monitorHub": "Monitor Hub",
    "systemConfig": "System Config"
  },
  "header": {
    "languageSwitch": "Language Switch",
    "english": "English",
    "chinese": "中文"
  },
  "pages": {
    "benchmarkJobs": {
      "title": "Benchmark Jobs",
      "description": "Test task management and monitoring",
      "createNew": "Create Task",
      "edit": "Edit Task",
      "status": "Status",
      "actions": "Actions",
      "view": "View",
      "delete": "Delete",
      "refresh": "Refresh",
      "taskId": "Task ID",
      "taskName": "Task Name",
      "targetUrl": "Target URL",
      "model": "Model",
      "concurrentUsers": "Concurrent Users",
      "duration": "Duration (s)",
      "createdTime": "Created Time",
      "copyTemplate": "Copy Template",
      "stop": "Stop",
      "results": "Results",
      "logs": "Logs",
      "searchPlaceholder": "Search task name, model or ID",
      "stopConfirmTitle": "Are you sure you want to stop this task?",
      "stopConfirmContent": "After stopping the task, it cannot be resumed",
      "confirmStop": "Confirm Stop",
      "copyWarning": "Please note: Authentication credentials and uploaded files need to be re-entered",
      "refreshedAgo": "Refreshed a few seconds ago",
      "lastRefresh": "Last refresh"
    },
    "results": {
      "title": "Test Results",
      "downloadReport": "Download Report",
      "backToJobs": "Back to Jobs",
      "taskInfo": "Task Information",
      "performanceMetrics": "Performance Metrics",
      "responseTimeAnalysis": "Response Time Analysis",
      "requestDetails": "Request Details",
      "errorAnalysis": "Error Analysis",
      "aiAnalysis": "AI Summary",
      "generateReport": "Generate Report",
      "downloadImage": "Download Image",
      "showAnalysis": "Show Analysis",
      "hideAnalysis": "Hide Analysis",
      "analysisLoading": "Analyzing...",
      "analysisError": "Analysis Failed",
      "noData": "No Data",
      "totalRequests": "Total Requests",
      "successRate": "Success Rate",
      "avgResponseTime": "Avg Response Time",
      "maxResponseTime": "Max Response Time",
      "minResponseTime": "Min Response Time",
      "throughput": "Throughput",
      "errorRate": "Error Rate",
      "p50ResponseTime": "P50 Response Time",
      "p95ResponseTime": "P95 Response Time",
      "p99ResponseTime": "P99 Response Time",
      "aiSummary": "AI Summary",
      "startAnalysis": "Start Analysis",
      "analysisCompleted": "AI analysis completed!",
      "analysisFailed": "AI analysis failed",
      "analysisFailedWithError": "AI analysis failed: {{error}}",
      "analysisTimeout": "AI analysis timeout, please try again later or check AI service configuration",
      "generatingReport": "Generating report...",
      "downloadSuccessful": "Download successful!",
      "downloadFailed": "Download failed",
      "downloadFailedWithError": "Download failed: {{error}}",
      "reportComponentsNotLoaded": "Report components not fully loaded, please try again later.",
      "unableToCaptureContent": "Unable to capture any report content.",
      "unableToCreateCanvas": "Unable to create Canvas drawing context.",
      "testConfiguration": "Test Configuration",
      "resultsOverview": "Results Overview",
      "responseTime": "Response Time",
      "resultDetails": "Result Details",
      "taskId": "Task ID",
      "taskName": "Task Name",
      "targetUrl": "Target URL",
      "requestPayload": "Request Payload",
      "datasetSource": "Dataset Source",
      "datasetType": "Dataset Type",
      "modelName": "Model Name",
      "concurrentUsers": "Concurrent Users",
      "testDuration": "Test Duration",
      "builtInDataset": "Built-in Dataset",
      "customDataset": "Custom Dataset",
      "textOnlyConversations": "Text-Only Conversations",
      "multimodalTextImage": "Multimodal (Text + Image)",
      "noValidResults": "No valid test results found",
      "metricType": "Metric Type",
      "totalRequestsCol": "Total Requests",
      "avgResponseTimeCol": "Avg Response Time (s)",
      "maxResponseTimeCol": "Max Response Time (s)",
      "minResponseTimeCol": "Min Response Time (s)",
      "p90ResponseTimeCol": "90% Response Time (s)",
      "medianResponseTimeCol": "Median Response Time (s)",
      "rpsCol": "RPS (req/s)",
      "rps": "RPS",
      "ttft": "TTFT (s)",
      "totalTps": "Total TPS (tokens/s)",
      "completionTps": "Completion TPS (tokens/s)",
      "avgTotalTpr": "Avg. Total TPR (tokens/req)",
      "avgCompletionTpr": "Avg. Completion TPR (tokens/req)",
      "copyAnalysis": "Copy analysis",
      "analysisCopied": "Analysis copied to clipboard",
      "expand": "Expand",
      "collapse": "Collapse",
      "copyRequestPayload": "Copy request payload",
      "requestPayloadCopied": "Request payload copied to clipboard",
      "copyResults": "Copy results",
      "resultsCopied": "Results copied to clipboard",
      "noTestResultsAvailable": "No test results available",
      "loadingResultData": "Loading result data...",
      "pleaseEnsureCompleteResults": "Please ensure that the test results are complete and the AI analysis model has been configured",
      "metricExplanations": {
        "Time_to_first_output_token": "Time to output the first token in the final answer (content field)",
        "Time_to_output_completion": "Generation time for the final answer",
        "Total_time": "Total time to complete the entire request",
        "Time_to_first_reasoning_token": "Time to output the first token in the reasoning part (reasoning_content field)",
        "Time_to_reasoning_completion": "Generation time for the reasoning part"
      },
      "statisticExplanations": {
        "RPS": "Number of requests sent per second",
        "TTFT (s)": "Time to first token (s)",
        "Total TPS (tokens/s)": "Number of input and generated tokens per second",
        "Completion TPS (tokens/s)": "Number of generated tokens per second",
        "Avg. Total TPR (tokens/req)": "Average number of input and generated tokens per request",
        "Avg. Completion TPR (tokens/req)": "Average number of generated tokens per request"
      }
    },
    "systemMonitor": {
      "title": "System Monitor",
      "cpuUsage": "CPU Usage",
      "memoryUsage": "Memory Usage",
      "diskUsage": "Disk Usage",
      "networkTraffic": "Network Traffic",
      "systemLoad": "System Load",
      "uptime": "Uptime"
    },
    "systemConfig": {
      "title": "System Configuration",
      "save": "Save",
      "cancel": "Cancel",
      "reset": "Reset",
      "aiConfig": "AI Configuration",
      "databaseConfig": "Database Configuration",
      "securityConfig": "Security Configuration",
      "apiKey": "API Key",
      "baseUrl": "URL",
      "timeout": "Timeout",
      "retryCount": "Retry Count",
      "configure": "Configure",
      "testConnection": "Test Connection",
      "connectionSuccess": "Connection Successful",
      "connectionFailed": "Connection Failed",
      "configSaved": "Configuration Saved",
      "configSaveFailed": "Failed to Save Configuration",
      "loadConfigFailed": "Failed to Load Configuration",
      "model": "Model",
      "enterApiKey": "Enter your API key",
      "baseUrlDescription": "The host URL for the AI service",
      "modelDescription": "The AI model to use for analysis",
      "apiKeyDescription": "The API key for authentication",
      "aiConfigDescription": "These settings are used when performing AI analysis on performance results.",
      "pleaseEnterHostUrl": "Please enter AI service host URL",
      "enterBaseUrlDescription": "Enter the base URL for your AI service (e.g., https://api.openai.com)",
      "pleaseEnterModelName": "Please enter AI model name",
      "enterModelDescription": "Enter the model name to use for analysis (e.g., gpt-3.5-turbo, gpt-4)",
      "pleaseEnterApiKey": "Please enter API key",
      "enterApiKeyDescription": "Enter your API key for authentication",
      "enterApiKeyWithoutBearer": "Enter your API key without Bearer prefix"
    },
    "resultComparison": {
      "title": "Model Arena",
      "selectModels": "Select Models",
      "compare": "Compare",
      "addModel": "Add Model",
      "removeModel": "Remove Model",
      "performanceComparison": "Performance Comparison",
      "detailedComparison": "Detailed Comparison",
      "selectTasks": "Select Tasks",
      "comparisonChart": "Comparison Chart",
      "exportComparison": "Export Comparison",
      "description": "Model performance comparison with multi-metric",
      "clearAllTasks": "Clear All Selected Tasks",
      "clearAllTasksConfirm": "Are you sure you want to clear all selected tasks?",
      "allTasksCleared": "All tasks cleared",
      "select": "Select",
      "taskId": "Task ID",
      "taskName": "Task Name",
      "modelName": "Model Name",
      "concurrentUsers": "Concurrent Users",
      "testDuration": "Test Duration",
      "createdTime": "Created Time",
      "downloadSuccessful": "Download successful!",
      "downloadFailed": "Download failed: {{error}}",
      "modelInfo": "Model Info",
      "download": "Download Report",
      "selectModel": "Select Model",
      "clearAll": "Clear All",
      "pleaseSelectModel": "Please select the model for comparison",
      "comparisonResults": "Comparison Results",
      "tasksSelected": "{{count}} task(s) selected",
      "compareResult": "Compare Result",
      "searchTaskOrModel": "Search task name or model name",
      "filterModel": "Filter model",
      "noAvailableTasks": "No available tasks found",
      "selectTasksForComparison": "Select 2-5 completed tasks for comparison.",
      "fetchAvailableTasksFailed": "Failed to fetch available tasks",
      "fetchAvailableTasksError": "Failed to fetch available tasks",
      "selectAtLeast2Tasks": "Please select at least 2 tasks for comparison",
      "max5TasksAllowed": "Maximum 5 tasks can be selected for comparison",
      "comparisonCompleted": "Result comparison completed",
      "compareResultFailed": "Failed to compare Result",
      "compareResultError": "Failed to compare Result",
      "generatingComparisonReport": "Generating comparison report...",
      "comparisonComponentsNotLoaded": "Comparison components not fully loaded, please try again later.",
      "unableToCaptureComparisonContent": "Unable to capture any comparison content.",
      "unableToCreateCanvasContext": "Unable to create Canvas drawing context.",
      "selectModelForComparison": "Select Model for Comparison",
      "unknownError": "Unknown error",
      "timeToFirstToken": "Time to First Token (TTFT)",
      "requestsPerSecond": "Requests Per Second (RPS)",
      "totalTokensPerSecond": "Total Tokens Per Second (TPS)",
      "completionTokensPerSecond": "Completion Tokens Per Second",
      "averageTotalTokensPerRequest": "Average Total Tokens Per Request",
      "averageCompletionTokensPerRequest": "Average Completion Tokens Per Request",
      "metricDescriptions": {
        "rps": "Number of requests sent per second",
        "ttft": "Time to first token (s)",
        "totalTps": "Number of input and generated tokens per second",
        "completionTps": "Number of generated tokens per second",
        "avgTotalTpr": "Average number of input and generated tokens per request",
        "avgCompletionTpr": "Average number of generated tokens per request"
      },
      "concurrentUsersSuffix": "u",
      "chartTitles": {
        "ttft": "TTFT (ms)",
        "rps": "RPS",
        "totalTps": "Total TPS",
        "completionTps": "Completion TPS",
        "avgTotalTpr": "Avg Total TPR",
        "avgCompletionTpr": "Avg Completion TPR"
      },
      "aiAnalysis": "AI Summary",
      "aiAnalysisResults": "AI Summary Results",
      "selectAtLeast1TaskForAnalysis": "Please select at least 1 task for analysis",
      "max5TasksAllowedForAnalysis": "Maximum 5 tasks can be analyzed at once",
      "analysisCompleted": "AI analysis completed",
      "analysisFailed": "AI analysis failed",
      "analysisError": "AI analysis error",
      "analysisTimeout": "AI analysis timeout, please try again later or check AI service configuration",
      "noAnalysisResult": "No analysis result available",
      "copyAnalysis": "Copy",
      "analysisCopied": "Copied",
      "downloadAnalysis": "Download Report",
      "analysisDownloadSuccessful": "Download successful",
      "analysisDownloadFailed": "Download failed: {{error}}"
    },
    "taskLog": {
      "title": "Task Log",
      "download": "Download",
      "clear": "Clear",
      "realTimeLog": "Real-time Log",
      "logLevel": "Log Level",
      "filterLogs": "Filter Logs",
      "autoRefresh": "Auto Refresh",
      "stopRefresh": "Stop Refresh",
      "refreshInterval": "Refresh Interval",
      "logEmpty": "No Logs",
      "logLoadFailed": "Failed to Load Logs",
      "refreshLogs": "Refresh",
      "last100Lines": "Last 100 lines",
      "last500Lines": "Last 500 lines",
      "last1000Lines": "Last 1000 lines",
      "allLogs": "All logs",
      "searchLogContent": "Search log content",
      "downloadLogs": "Download Logs",
      "fullscreen": "Fullscreen",
      "exitFullscreen": "Exit Fullscreen",
      "searchResults": "Search results: \"{{searchTerm}}\"",
      "autoRefreshError": "Log auto-refresh error",
      "autoRefreshPaused": "Auto-refresh has been paused. Please check the service status and click the \"Refresh\" button to retry.",
      "refreshNow": "Refresh Now"
    },
    "notFound": {
      "title": "Page Not Found",
      "description": "Sorry, the page you visited does not exist",
      "backHome": "Back Home"
    }
  },
  "components": {
    "createJobForm": {
      "basicInfo": "Basic Information",
      "apiConfig": "API Configuration",
      "loadConfig": "Load Configuration",
      "advancedConfig": "Advanced Configuration",
      "taskName": "Task Name",
      "taskNamePlaceholder": "Please enter task name",
      "taskNameRequired": "Please enter task name",
      "apiType": "API Type",
      "openaiApi": "OpenAI API",
      "customApi": "Custom API",
      "targetHost": "Target Host",
      "targetHostPlaceholder": "Please enter target host",
      "targetHostRequired": "Please enter target host",
      "apiPath": "API Path",
      "apiPathPlaceholder": "Please enter API path",
      "model": "Model",
      "modelPlaceholder": "Please enter model name",
      "modelRequired": "Please enter model name",
      "apiKey": "API Key",
      "apiKeyPlaceholder": "Please enter API key",
      "apiKeyRequired": "Please enter API key",
      "concurrentUsers": "Concurrent Users",
      "duration": "Duration (seconds)",
      "rampUp": "Ramp-up Time (seconds)",
      "requestTimeout": "Request Timeout (seconds)",
      "dataset": "Dataset",
      "uploadDataset": "Upload Dataset",
      "selectDataset": "Select Dataset",
      "headers": "Headers",
      "addHeader": "Add Header",
      "headerName": "Header Name",
      "headerValue": "Header Value",
      "fieldMapping": "Field Mapping",
      "promptField": "Prompt Field",
      "contentField": "Content Field",
      "dataFormat": "Data Format",
      "customFields": "Custom Fields",
      "testConnection": "Test Connection",
      "submit": "Submit",
      "submitting": "Submitting...",
      "cancel": "Cancel",
      "previous": "Previous",
      "next": "Next",
      "validationFailed": "Form validation failed",
      "submitSuccess": "Task created successfully",
      "submitFailed": "Failed to create task",
      "connectionSuccess": "Connection test successful",
      "connectionFailed": "Connection test failed",
      "basicConfiguration": "Basic Configuration",
      "requestConfiguration": "Request Configuration",
      "testData": "Test Data",
      "loadConfiguration": "Load Configuration",
      "apiFieldMapping": "API Field Mapping",
      "apiEndpoint": "API Endpoint",
      "apiEndpointTooltip": "The complete API endpoint URL for testing",
      "modelName": "Model Name",
      "modelNameTooltip": "The model identifier available on your API endpoint",
      "requestMethod": "Request Method",
      "requestMethodTooltip": "HTTP request method for API calls",
      "responseMode": "Response Mode",
      "responseModeTooltip": "Choose between streaming and non-streaming response mode",
      "requestPayload": "Request Payload",
      "requestPayloadTooltip": "Request payload for your API. Please use simple test data here for testing, the dataset as follows will be applied during load testing.",
      "systemPrompt": "System Prompt",
      "systemPromptTooltip": "System-level instructions that will be sent with every request",
      "advancedSettings": "Advanced Settings",
      "httpHeaders": "HTTP Headers",
      "httpHeadersTooltip": "Configure custom HTTP headers. API Key should include the \"Bearer \" prefix if required by your API.",
      "requestCookies": "Request Cookies",
      "requestCookiesTooltip": "HTTP cookies for session-based authentication",
      "sslClientCertificate": "SSL Client Certificate",
      "sslClientCertificateTooltip": "Client certificates for mTLS (mutual TLS) authentication",
      "combinedCertificateKeyFile": "Combined Certificate & Key File",
      "separateCertificateKeyFiles": "Separate Certificate & Key Files",
      "selectCombinedPemFile": "Select Combined PEM File",
      "selectCertificate": "Select Certificate",
      "selectPrivateKey": "Select Private Key",
      "clientCertificate": "Client certificate",
      "privateKeyFile": "Private key file",
      "combinedPemDescription": "Upload a single .pem file containing both the client certificate and private key",
      "datasetSource": "Dataset Source",
      "datasetSourceTooltip": "Choose how to provide test prompts: use built-in datasets, input custom data, upload your own file, or use original request payload",
      "builtInDataset": "Built-in Dataset",
      "customJsonlData": "Custom JSONL Data",
      "uploadJsonlFile": "Upload JSONL File",
      "noDataset": "No Dataset",
      "datasetType": "Dataset Type",
      "datasetTypeTooltip": "Choose between text-only conversations or multimodal conversations with images",
      "textOnlyConversations": "Text-Only Conversations",
      "multimodalTextImage": "Multimodal (Text + Image)",
      "datasetFile": "Dataset File",
      "datasetFileTooltip": "Upload a .jsonl file where each line contains a JSON object with \"id\" and \"prompt\" fields",
      "selectJsonlFile": "Select JSONL File",
      "jsonlFormatDescription": "Required format: .jsonl file with each line containing {\"id\": \"...\", \"prompt\": \"...\"}",
      "jsonlData": "JSONL Data",
      "jsonlDataTooltip": "Each line must be a valid JSON object with \"id\" and \"prompt\" fields.",
      "testDuration": "Test Duration (seconds)",
      "testDurationTooltip": "How long the load test should run",
      "concurrentUsersTooltip": "Maximum number of virtual users sending requests simultaneously",
      "userSpawnRate": "User Spawn Rate",
      "userSpawnRateTooltip": "Number of new virtual users started per second during ramp-up",
      "requestFieldMapping": "Request Field Mapping",
      "promptFieldPath": "Prompt Field Path",
      "promptFieldPathTooltip": "The key in your request payload that contains the user prompt (needed for performance metrics calculation)",
      "streamingResponseConfiguration": "Streaming Response Configuration",
      "streamLinePrefix": "Stream Line Prefix",
      "streamLinePrefixTooltip": "Text that appears at the beginning of each streaming data line (e.g., \"data:\", \"event:\")",
      "dataFormatTooltip": "Format of the streaming data after removing the prefix",
      "jsonFormat": "JSON Format",
      "plainText": "Plain Text",
      "contentFieldPath": "Content Field Path",
      "contentFieldPathTooltip": "Dot-notation path to the main content in each JSON chunk (e.g., choices.0.delta.content)",
      "reasoningFieldPath": "Reasoning Field Path",
      "reasoningFieldPathTooltip": "Dot-notation path to reasoning content in JSON (optional, for models that support reasoning)",
      "streamTerminationConfiguration": "Stream Termination Configuration",
      "endLinePrefix": "End Line Prefix",
      "endLinePrefixTooltip": "Prefix for lines that contain stream termination signals (usually same as stream prefix)",
      "stopSignal": "Stop Signal",
      "stopSignalTooltip": "Text content that indicates the stream has ended (e.g., [DONE], STOP, finished)",
      "endFieldPath": "End Field Path",
      "endFieldPathTooltip": "JSON path to a field that indicates completion (optional, e.g., choices.0.finish_reason)",
      "nonStreamingResponseConfiguration": "Non-Streaming Response Configuration",
      "nonStreamingContentFieldPathTooltip": "Dot-notation path to the main content in the response JSON (e.g., choices.0.message.content)",
      "nonStreamingReasoningFieldPathTooltip": "Dot-notation path to reasoning content (optional, for models with reasoning capabilities)",
      "fieldMappingDescription": "Configure field mappings for both prompt field and response data extraction. This mapping is essential for updating request payloads with test data and parsing streaming/non-streaming responses correctly.",
      "testIt": "Test It",
      "nextStep": "Next Step",
      "previousStep": "Previous",
      "create": "Create",
      "basicRequest": "Basic & Request",
      "dataLoad": "Data & Load",
      "apiTest": "API Test",
      "statusCode": "Status Code",
      "responseData": "Response Data",
      "stream": "Streaming",
      "nonStreaming": "Non-streaming",
      "chunks": "chunks",
      "fileSizeExceedsLimit": "File size exceeds 10MB limit.",
      "fileSizeExceedsLimitWithSize": "File size exceeds 10MB limit. Current size: {{size}}MB",
      "fileSelected": "{{fileName}} file selected",
      "fileUploadFailed": "{{fileName}} upload failed",
      "pleaseFillRequiredFields": "Please fill in all required fields before proceeding",
      "requestPayloadRequired": "Request payload is required for all API endpoints",
      "testFailedCheckConfig": "Test failed, please check your configuration",
      "networkTimeoutCheckConnection": "Network timeout, please check your connection and try again",
      "certificateUploadFailed": "Certificate upload failed, please try again",
      "testDataUploadFailed": "Test data upload failed, please try again",
      "taskTemplateCopied": "Task template copied. Please note: Advanced settings need to be re-filled or uploaded.",
      "pleaseEnterTaskName": "Please enter task name",
      "pleaseEnterApiUrl": "Please enter API URL",
      "invalidUrlFormat": "Please enter a valid URL format (starting with http:// or https://)",
      "urlCannotContainSpaces": "URL cannot contain spaces",
      "pleaseEnterApiPath": "Please enter API path",
      "pleaseEnterModelName": "Please enter model name",
      "pleaseSelectResponseMode": "Please select response mode",
      "pleaseEnterRequestPayload": "Please enter request payload",
      "pleaseEnterValidJson": "Please enter valid JSON format",
      "pleaseSelectDatasetSource": "Please select dataset source",
      "pleaseSelectDatasetType": "Please select dataset type",
      "pleaseUploadDatasetFile": "Please upload dataset file",
      "pleaseEnterJsonlData": "Please enter JSONL data",
      "invalidJsonlFormat": "Invalid JSONL format. Each line must be valid JSON with required fields.",
      "eachLineMustContainFields": "Each line must contain \"id\" and \"prompt\" fields",
      "pleaseEnterTestDuration": "Please enter test duration",
      "pleaseEnterConcurrentUsers": "Please enter number of concurrent users",
      "pleaseEnterSpawnRate": "Please enter spawn rate",
      "pleaseSpecifyPromptFieldPath": "Please specify the prompt field path",
      "pleaseSelectDataFormat": "Please select data format",
      "pleaseSpecifyContentFieldPath": "Please specify content field path",
      "pleaseSpecifyStopSignal": "Please specify stop signal",
      "pleaseEnterApiKey": "Please enter API key (include Bearer prefix if required)",
      "addHeaderButton": "Add Header",
      "addCookieButton": "Add Cookie",
      "systemHeader": "System Header",
      "headerNamePlaceholder": "Header Name",
      "headerValuePlaceholder": "Header Value",
      "cookieNamePlaceholder": "Cookie Name (e.g. session_token)",
      "cookieValuePlaceholder": "Cookie Value",
      "close": "Close"
    },
    "systemLogs": {
      "title": "System Logs",
      "level": "Level",
      "message": "Message",
      "timestamp": "Timestamp",
      "source": "Source",
      "clearLogs": "Clear Logs",
      "refreshLogs": "Refresh Logs",
      "exportLogs": "Export Logs",
      "engineLogs": "Engine Logs",
      "backendLogs": "Backend Logs",
      "loadingData": "Loading {{displayName}} data...",
      "noLogsAvailable": "No {{displayName}} available",
      "last100Lines": "Last 100 lines",
      "last500Lines": "Last 500 lines",
      "last1000Lines": "Last 1000 lines",
      "allLogs": "All logs",
      "autoRefresh": "Auto Refresh",
      "stopRefresh": "Stop Refresh",
      "searchLogContent": "Search log content",
      "downloadLogs": "Download Logs",
      "fullscreen": "Fullscreen",
      "exitFullscreen": "Exit Fullscreen",
      "searchResults": "Search results: \"{{searchTerm}}\"",
      "autoRefreshError": "Log auto-refresh error",
      "autoRefreshPaused": "Auto-refresh has been paused. Please check the service status and click the \"Refresh\" button to retry.",
      "refreshNow": "Refresh Now"
    }
  },
  "common": {
    "loading": "Loading...",
    "error": "Error",
    "success": "Success",
    "warning": "Warning",
    "info": "Info",
    "confirm": "Confirm",
    "cancel": "Cancel",
    "save": "Save",
    "delete": "Delete",
    "edit": "Edit",
    "view": "View",
    "search": "Search",
    "filter": "Filter",
    "export": "Export",
    "import": "Import",
    "refresh": "Refresh",
    "close": "Close",
    "back": "Back",
    "next": "Next",
    "previous": "Previous",
    "submit": "Submit",
    "reset": "Reset",
    "upload": "Upload",
    "download": "Download",
    "copy": "Copy",
    "copySuccess": "Copied successfully",
    "copyFailed": "Copy failed",
    "operation": "Operation",
    "name": "Name",
    "type": "Type",
    "description": "Description",
    "createdAt": "Created At",
    "updatedAt": "Updated At",
    "noData": "No Data",
    "networkError": "Network Error",
    "serverError": "Server Error",
    "unauthorized": "Unauthorized",
    "forbidden": "Forbidden",
    "notFound": "Not Found",
    "timeout": "Timeout",
    "unknown": "Unknown",
    "optional": "Optional",
    "required": "Required",
    "placeholder": "Please enter",
    "select": "Please select",
    "total": "Total",
    "page": "Page",
    "pageSize": "Page Size",
    "of": "of",
    "to": "to",
    "items": "items",
    "all": "All",
    "none": "None",
    "yes": "Yes",
    "no": "No",
    "enabled": "Enabled",
    "disabled": "Disabled",
    "online": "Online",
    "offline": "Offline",
    "active": "Active",
    "inactive": "Inactive",
    "notConfigured": "Not configured",
    "fetchTasksFailed": "Failed to fetch task list, please try again later",
    "createSuccess": "Created successfully",
    "createFailed": "Failed to create task",
    "stopTaskFailed": "Failed to stop task",
    "stoppingTask": "Stopping task...",
    "taskStopping": "Task is being stopped..."
  },
  "status": {
    "pending": "Pending",
    "running": "Running",
    "completed": "Completed",
    "failed": "Failed",
    "cancelled": "Cancelled",
    "queued": "Queued",
    "paused": "Paused",
    "stopped": "Stopped",
    "timeout": "Timeout",
    "error": "Error",
    "created": "Created",
    "stopping": "Stopping",
    "locked": "Pending",
    "failed_requests": "Request Failed"
  },
  "validation": {
    "required": "This field is required",
    "minLength": "Length should not be less than {{min}} characters",
    "maxLength": "Length should not exceed {{max}} characters",
    "email": "Please enter a valid email address",
    "url": "Please enter a valid URL",
    "number": "Please enter a valid number",
    "positive": "Please enter a positive number",
    "integer": "Please enter an integer",
    "range": "Value should be between {{min}} and {{max}}"
  },
  "time": {
    "seconds": "seconds",
    "minutes": "minutes",
    "hours": "hours",
    "days": "days",
    "weeks": "weeks",
    "months": "months",
    "years": "years",
    "ago": "ago",
    "now": "now",
    "justNow": "just now",
    "today": "today",
    "yesterday": "yesterday",
    "tomorrow": "tomorrow"
  }
}
